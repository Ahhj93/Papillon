{"version":3,"file":"js/70-legacy.cead7eff.js","mappings":"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","sources":["webpack://papillon/./node_modules/@capacitor/share/dist/esm/index.js","webpack://papillon/./src/views/grades/GradesSetup.vue?dd96","webpack://papillon/./src/views/grades/GradesView.vue","webpack://papillon/./src/views/grades/GradesInsightsView.vue","webpack://papillon/./node_modules/@kurkle/color/dist/color.esm.js","webpack://papillon/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://papillon/./node_modules/chart.js/dist/chart.js","webpack://papillon/./node_modules/vue-chartjs/dist/index.js","webpack://papillon/./src/views/grades/GradesInsightsView.vue?52ad","webpack://papillon/./src/functions/login/ChangePeriod.js","webpack://papillon/./src/views/grades/GradesView.vue?cc9c","webpack://papillon/./src/views/grades/GradesSetup.vue?37e8","webpack://papillon/./src/views/grades/GradesSetup.vue","webpack://papillon/./src/views/grades/MarkView.vue","webpack://papillon/./src/views/grades/MarkView.vue?4948"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst Share = registerPlugin('Share', {\n    web: () => import('./web').then(m => new m.ShareWeb()),\n});\nexport * from './definitions';\nexport { Share };\n//# sourceMappingURL=index.js.map","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_nav = _resolveComponent(\"ion-nav\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_nav, {\n        onIonNavDidChange: $options.navDidChange,\n        onIonNavWillChange: $options.navWillChange,\n        root: $data.component,\n        ref: \"page\"\n      }, null, 8, [\"onIonNavDidChange\", \"onIonNavWillChange\", \"root\"])\n    ]),\n    _: 1\n  }))\n}","<script>\n\timport { defineComponent } from 'vue';\n\timport {\n\t\tIonHeader,\n\t\tIonContent,\n\t\tIonToolbar,\n\t\tIonTitle,\n\t\tIonText,\n\t\tIonMenuButton,\n\t\tIonPage,\n\t\tIonButtons,\n\t\tIonList,\n\t\tIonListHeader,\n\t\tIonLabel,\n\t\tIonItem,\n\t\tIonCard,\n\t\tIonSegment,\n\t\tIonSegmentButton,\n\t\tIonModal,\n\t\tIonSelect,\n\t\tIonNavLink,\n\t\tIonSpinner,\n\t\tIonChip,\n\t\talertController\n\t} from '@ionic/vue';\n\n\timport displayToast from '@/functions/utils/displayToast.js';\n\n\timport MarkView from './MarkView.vue';\n\timport GradesInsightsView from './GradesInsightsView.vue';\n\timport GetGrades from '@/functions/fetch/GetGrades.js';\n\timport ChangePeriod from '@/functions/login/ChangePeriod.js';\n\n\timport { Capacitor } from '@capacitor/core';\n\n\timport { Share } from '@capacitor/share';\n\n\texport default defineComponent({\n\t\tname: 'FolderPage',\n\t\tcomponents: {\n\t\t\tIonHeader,\n\t\t\tIonContent,\n\t\t\tIonToolbar,\n\t\t\tIonTitle,\n\t\t\tIonMenuButton,\n\t\t\tIonPage,\n\t\t\tIonButtons,\n\t\t\tIonChip,\n\t\t\tIonCard,\n\t\t\tIonItem,\n\t\t\tIonLabel,\n\t\t\tIonList,\n\t\t\tIonModal,\n\t\t\tIonListHeader,\n\t\t\tIonSegment,\n\t\t\tIonSegmentButton,\n\t\t\tIonSelect,\n\t\t\tIonText,\n\t\t\tIonNavLink,\n\t\t\tIonSpinner\n\t\t},\n\t\tdata() {\n\t\t\tconst gradesDisplay = localStorage.getItem('gradesDisplay') || 'Liste';\n\n\t\t\tconst isAndroid = Capacitor.getPlatform() !== \"ios\";\n\n\t\t\tconsole.log(isAndroid);\n\n\t\t\treturn {\n\t\t\t\tmd: isAndroid,\n\t\t\t\tMarkView: MarkView,\n\t\t\t\tGradesInsightsView: GradesInsightsView,\n\t\t\t\tdisplay: gradesDisplay,\n\t\t\t\tgrades: [],\n\t\t\t\tfullGrades: [],\n\t\t\t\taverages: [],\n\t\t\t\tclassAverages: [],\n\t\t\t\tisLoading: false,\n\t\t\t\tperiods: [],\n\t\t\t\tcurrent_period: [],\n\t\t\t\tbase_period: [],\n\t\t\t\tsegChangeTimeout: false,\n\t\t\t\tselectedMark: {\n\t\t\t\t\tsubject: \"\",\n\t\t\t\t\taverage: 0,\n\t\t\t\t\tclass_average: 0,\n\t\t\t\t\tmax_average: 0,\n\t\t\t\t\tmin_average: 0,\n\t\t\t\t\tout_of: 0,\n\t\t\t\t},\n\t\t\t\tselectedGrade: [],\n\t\t\t\tselectedGradeSet: false,\n\t\t\t\tout_of_20: localStorage.getItem('tweakGrades20') == \"true\" ? true : false,\n\t\t\t\tloginService: localStorage.getItem(\"loginService\"),\n\t\t\t\tcalcAverage: []\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tgetPeriods() {\n\t\t\t\tconst allPeriods = JSON.parse(localStorage.getItem('userData')).periods;\n\n\t\t\t\t// find period with actual = true\n\t\t\t\tlet actualPeriod = allPeriods.find(period => period.actual == true);\n\n\t\t\t\tif (localStorage.getItem('currentPeriod')) {\n\t\t\t\t\tactualPeriod = JSON.parse(localStorage.getItem('currentPeriod'));\n\t\t\t\t}\n\n\t\t\t\tthis.current_period = actualPeriod;\n\t\t\t\tthis.base_period = actualPeriod;\n\n\t\t\t\t// if first period contains \"Trimestre\", add all trimesters\n\t\t\t\tif (actualPeriod.name.toLowerCase().includes(\"trimestre\")) {\n\t\t\t\t\tfor (let i = 0; i < allPeriods.length; i++) {\n\t\t\t\t\t\tif (allPeriods[i].name.toLowerCase().includes(\"trimestre\")) {\n\t\t\t\t\t\t\tthis.periods.push(allPeriods[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if first period contains \"Semestre\", add all semesters\n\t\t\t\tif (actualPeriod.name.toLowerCase().includes(\"semestre\")) {\n\t\t\t\t\tfor (let i = 0; i < allPeriods.length; i++) {\n\t\t\t\t\t\tif (allPeriods[i].name.toLowerCase().includes(\"semestre\")) {\n\t\t\t\t\t\t\tthis.periods.push(allPeriods[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tsegChange() {\n\t\t\t\tif (!this.segChangeTimeout) {\n\t\t\t\t\tconst newSegment = this.$refs.segment.$el.value;\n\n\t\t\t\t\t// get corresponding period name from id\n\t\t\t\t\tconst newPeriod = this.periods.find(period => period.id == newSegment);\n\n\t\t\t\t\t// save in localstorage\n\t\t\t\t\tlocalStorage.setItem('currentPeriod', JSON.stringify(newPeriod));\n\n\t\t\t\t\t// change current period\n\t\t\t\t\tChangePeriod(newPeriod.name).then(() => {\n\t\t\t\t\t\t\tthis.getGradesRefresh(true);\n\t\t\t\t\t\t\tthis.current_period = newPeriod;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\tthis.$refs.segment.$el.value = this.base_period.id;\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetClosestGradeEmoji(subjectName) {\n\t\t\t\tconst gradeEmojiList = {\n\t\t\t\t\t'numerique': '💻',\n\t\t\t\t\t'moral': '⚖️',\n\t\t\t\t\t'sport': '🏀',\n\t\t\t\t\t'econo': '📈',\n\t\t\t\t\t'francais': '📚',\n\t\t\t\t\t'anglais': '🇬🇧',\n\t\t\t\t\t'allemand': '🇩🇪',\n\t\t\t\t\t'espagnol': '🇪🇸',\n\t\t\t\t\t'latin': '🇮🇹',\n\t\t\t\t\t'italien': '🇮🇹',\n\t\t\t\t\t'histoire': '📜',\n\t\t\t\t\t'llc': '🌍',\n\t\t\t\t\t'scientifique': '🔬',\n\t\t\t\t\t'arts': '🎨',\n\t\t\t\t\t'philosophie': '🤔',\n\t\t\t\t\t'math': '📐',\n\t\t\t\t\t'phys': '🧪',\n\t\t\t\t\t'accomp': '👨‍🏫',\n\t\t\t\t\t'tech': '🔧',\n\t\t\t\t\t'musique': '🎼',\n\t\t\t\t\t'musical': '🎼',\n\t\t\t\t\t'vie': '🧬',\n\t\t\t\t\t'stage': '👔',\n\t\t\t\t\t'default': '📝'\n\t\t\t\t}\n\n\t\t\t\t// get emoji with key in subject name\n\t\t\t\tconst closest = Object.keys(gradeEmojiList).reduce((a, b) => {\n\t\t\t\t\treturn subjectName.toLowerCase().includes(a) ? a : b\n\t\t\t\t});\n\n\t\t\t\treturn gradeEmojiList[closest];\n\t\t\t},\n\t\t\topenAverageModal(subject) {\n\t\t\t\tthis.selectedMark = {\n\t\t\t\t\tsubject: subject.name,\n\t\t\t\t\taverage: subject.average,\n\t\t\t\t\tclass_average: subject.class.average,\n\t\t\t\t\tmax_average: subject.class.max,\n\t\t\t\t\tmin_average: subject.class.min,\n\t\t\t\t\tout_of: 20,\n\t\t\t\t\tgrouped: subject.grouped,\n\t\t\t\t\texcluded: subject.grpExcluded,\n\t\t\t\t}\n\n\t\t\t\tthis.$refs.averageModal.$el.present(subject);\n\t\t\t},\n\t\t\teditMarks(grades) {\n\t\t\t\tconst out_of_20 = this.out_of_20;\n\n\t\t\t\tgrades.forEach(subject => {\n\t\t\t\t\tsubject.marks.forEach(mark => {\n\t\t\t\t\t\t// if out of 20 make it out of 20\n\t\t\t\t\t\tif (out_of_20) {\n\t\t\t\t\t\t\tmark.grade.updated_value = parseFloat(mark.grade.value) / parseFloat(\n\t\t\t\t\t\t\t\tmark.grade.out_of) * 20;\n\n\t\t\t\t\t\t\tmark.grade.updated_value = mark.grade.updated_value.toFixed(2);\n\t\t\t\t\t\t\tmark.grade.updated_out_of = 20;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\treturn grades;\n\t\t\t},\n\t\t\tchangeDisplay(e) {\n\t\t\t\tconst val = e.detail.value;\n\n\t\t\t\tthis.display = val;\n\t\t\t\tlocalStorage.setItem('gradesDisplay', val);\n\t\t\t},\n\t\t\tsetExcludedJoinSubject(subjectName) {\n\t\t\t\tlet excludedGroupSubjects = localStorage.getItem('excludedGroupSubjects');\n\t\t\t\tsubjectName = subjectName.split(\" > \")[0].trim();\n\t\t\t\texcludedGroupSubjects = JSON.parse(excludedGroupSubjects) || [];\n\n\t\t\t\t// Set subject as excluded if not already and remove it from excludedGroupSubjects if it is\n\t\t\t\tif (excludedGroupSubjects.includes(subjectName)) {\n\t\t\t\t\texcludedGroupSubjects.splice(excludedGroupSubjects.indexOf(subjectName), 1);\n\t\t\t\t\tdisplayToast.presentToast(\"Cette matière sera désormais regroupé.\", \"success\");\n\t\t\t\t} else {\n\t\t\t\t\texcludedGroupSubjects.push(subjectName);\n\t\t\t\t\tdisplayToast.presentToast(\"Cette matière ne sera désormais plus regroupé.\", \"warning\");\n\t\t\t\t}\n\n\t\t\t\tlocalStorage.setItem('excludedGroupSubjects', JSON.stringify(excludedGroupSubjects));\n\t\t\t\tthis.getGradesRefresh();\n\t\t\t\tthis.$refs.averageModal.$el.dismiss();\n\t\t\t},\n\t\t\tgetGradesRefresh(fromSegChange) {\n\t\t\t\tif (fromSegChange) {\n\t\t\t\t\tthis.segChangeTimeout = true;\n\t\t\t\t\tthis.isLoading = true;\n\t\t\t\t}\n\n\t\t\t\tGetGrades(true).then((data) => {\n\t\t\t\t\tif (fromSegChange) {\n\t\t\t\t\t\tthis.segChangeTimeout = false;\n\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.grades = this.editMarks(data.marks);\n\t\t\t\t\tthis.fullGrades = this.editMarks(data.marks);\n\n\t\t\t\t\tthis.averages = data.averages;\n\t\t\t\t\tthis.isLoading = false;\n\n\t\t\t\t\tthis.classAverages = data.averages.class;\n\t\t\t\t})\n\t\t\t},\n\t\t\tgetStringToAsciiArray(string) {\n\t\t\t\tconst charCodeArr = [];\n\t\t\t\tfor(let i = 0; i < string.length; i++){\n\t\t\t\t\tconst code = string.charCodeAt(i);\n\t\t\t\t\tcharCodeArr.push(code);\n\t\t\t\t}\n\n\t\t\t\treturn charCodeArr;\n\t\t\t},\n\t\t\tasync shareGrade(grade, color) {\n\t\t\t\tconst sharedGrade = {\n\t\t\t\t\tgrade: {\n\t\t\t\t\t\tvalue: grade.grade.value,\n\t\t\t\t\t\tout_of: grade.grade.out_of,\n\t\t\t\t\t\tmax: grade.grade.max,\n\t\t\t\t\t\tmin: grade.grade.min,\n\t\t\t\t\t\tcoefficient: grade.grade.coefficient,\n\t\t\t\t\t\taverage: grade.grade.average,\n\t\t\t\t\t},\n\t\t\t\t\tinfo: {\n\t\t\t\t\t\tsubject: grade.info.subject,\n\t\t\t\t\t\tdescription: grade.info.description,\n\t\t\t\t\t\t...grade.info\n\t\t\t\t\t},\n\n\t\t\t\t\tcolor: color\n\t\t\t\t}\n\n\t\t\t\t// get first name of user\n\t\t\t\tlet firstName = JSON.parse(localStorage.getItem(\"userData\")).student.name;\n\t\t\t\tfirstName = firstName.split(\" \")[firstName.split(\" \").length - 1];\n\n\t\t\t\t// if custom name is set, use it instead\n\t\t\t\tif(localStorage.getItem(\"customName\")) {\n\t\t\t\t\tfirstName = localStorage.getItem(\"customName\").split(\" \")[localStorage.getItem(\"customName\").split(\" \").length - 1];\n\t\t\t\t}\n\n\t\t\t\t// Set customizable data to ascii\n\t\t\t\tfirstName = this.getStringToAsciiArray(firstName).join('-');\n\t\t\t\tsharedGrade.info.subject = this.getStringToAsciiArray(sharedGrade.info.subject).join('-');\n\t\t\t\tsharedGrade.info.description = this.getStringToAsciiArray(sharedGrade.info.description).join('-');\n\n\t\t\t\tlet urlElems = \"\";\n\n\t\t\t\t// Datas\n\t\t\t\turlElems += firstName + \"$\"; // first name\n\t\t\t\turlElems += sharedGrade.info.subject + \"$\";\n\t\t\t\turlElems += sharedGrade.info.description + \"$\";\n\t\t\t\turlElems += sharedGrade.info.outOf20 + \"$\";\n\t\t\t\turlElems += sharedGrade.info.bonus + \"$\";\n\t\t\t\turlElems += sharedGrade.info.optional + \"$\";\n\t\t\t\turlElems += sharedGrade.info.significant + \"$\";\n\t\t\t\turlElems += sharedGrade.info.significantReason + \"$\";\n\t\t\t\turlElems += sharedGrade.info.significantZero + \"$\";\n\t\t\t\turlElems += sharedGrade.info.significantAverage + \"$\";\n\t\t\t\turlElems += sharedGrade.info.date + \"$\";\n\t\t\t\turlElems += color + \"$\";\n\n\t\t\t\t// Grade\n\t\t\t\turlElems += sharedGrade.grade.value + \"$\";\n\t\t\t\turlElems += sharedGrade.grade.out_of + \"$\";\n\t\t\t\turlElems += sharedGrade.grade.coefficient + \"$\";\n\t\t\t\turlElems += sharedGrade.grade.average + \"$\";\n\t\t\t\turlElems += sharedGrade.grade.max + \"$\";\n\t\t\t\turlElems += sharedGrade.grade.min;\n\n\t\t\t\t// base64 encode urlElems\n\t\t\t\tconst url = \"https://getpapillon.xyz/grade?g=\" + btoa(urlElems);\n\n\t\t\t\t// share url\n\t\t\t\tawait Share.share({\n\t\t\t\t\turl: url,\n\t\t\t\t\tdialogTitle: \"Partager votre note de \" + sharedGrade.info.subject\n\t\t\t\t});\n\t\t\t},\n\t\t\thandleRefresh(event) {\n\t\t\t\t// get new Grades data\n\t\t\t\tthis.getGradesRefresh()\n\n\t\t\t\t// stop refresh when this.grades is updated\n\t\t\t\tthis.$watch('grades', () => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tevent.target.complete();\n\t\t\t\t\t}, 200);\n\t\t\t\t});\n\t\t\t},\n\t\t\tsearchGrades() {\n\t\t\t\tconst search1 = this.$refs.searchBarIos.$el.value;\n\t\t\t\tconst search2 = this.$refs.searchBarMd.$el.value;\n\n\n\t\t\t\tif (search1 == \"\" && search2 == \"\") {\n\t\t\t\t\tthis.grades = this.fullGrades;\n\t\t\t\t} else {\n\t\t\t\t\tconst search = search1 == \"\" ? search2 : search1;\n\t\t\t\t\tthis.grades = this.fullGrades.filter(subject => {\n\t\t\t\t\t\treturn subject.name.toLowerCase().includes(search.toLowerCase());\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\topenGradeModal(mark, color) {\n\t\t\t\tthis.selectedGrade = mark;\n\n\t\t\t\tthis.selectedGrade.color = color;\n\n\t\t\t\tthis.selectedGradeSet = true;\n\t\t\t\tthis.$refs.gradeModal.$el.present();\n\t\t\t},\n\t\t\tasync displayBiasedMsg() {\n\t\t\t\tconst alert = await alertController.create({\n\t\t\t\t\t\theader: 'Comprendre la moyenne +/-',\n\t\t\t\t\t\tmessage: 'Les moyennes maximales et minimales de la classe sont calculées à partir des moyennes maximales et minimales de chaque groupe, uniquement pour les enseignements que vous suivez. Cela peut fausser les chiffres qui ne sont affichés qu\\'à titre indicatif uniquement.',\n\t\t\t\t\t\tmode: 'md',\n\t\t\t\t\t\tbuttons: ['Je comprends']\n\t\t\t\t\t});\n\t\n\t\t\t\tawait alert.present();\n\t\t\t}\n\t\t},\n\t\tmounted() {\n\t\t\tthis.isLoading = true;\n\n\t\t\tGetGrades().then((data) => {\n\t\t\t\tthis.grades = this.editMarks(data.marks);\n\t\t\t\tthis.fullGrades = this.editMarks(data.marks);\n\n\t\t\t\tthis.averages = data.averages;\n\t\t\t\tthis.isLoading = false;\n\n\t\t\t\tthis.classAverages = data.averages.class;\n\t\t\t\tif(localStorage.getItem(\"loginService\") === \"ecoledirecte\") this.calcAverage = data.averages.calculate\n\t\t\t});\n\n\t\t\tthis.getPeriods();\n\n\t\t\tdocument.addEventListener('tokenUpdated', () => {\n\t\t\t\tGetGrades().then((data) => {\n\t\t\t\t\tthis.grades = this.editMarks(data.marks);\n\t\t\t\t\tthis.fullGrades = this.editMarks(data.marks);\n\t\t\t\t\tthis.averages = data.averages;\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tif(localStorage.getItem(\"loginService\") === \"ecoledirecte\") this.calcAverage = data.averages.calculate\n\t\t\t\t\tthis.classAverages = data.averages.class;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tdocument.addEventListener('settingsUpdated', () => {\n\t\t\t\tGetGrades().then((data) => {\n\t\t\t\t\tthis.out_of_20 = localStorage.getItem('tweakGrades20') == \"true\" ? true :\n\t\t\t\t\tfalse;\n\t\t\t\t\tthis.grades = this.editMarks(data.marks);\n\t\t\t\t\tthis.fullGrades = this.editMarks(data.marks);\n\t\t\t\t\tthis.averages = data.averages;\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tif(localStorage.getItem(\"loginService\") === \"ecoledirecte\") this.calcAverage = data.averages.calculate\n\t\t\t\t\tthis.classAverages = data.averages.class;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n</script>\n\n<template>\n\t<ion-page ref=\"page\">\n\t\t<IonHeader class=\"AppHeader\" translucent>\n\t\t\t<IonToolbar>\n\n\t\t\t\t<ion-buttons slot=\"start\">\n\t\t\t\t\t<ion-menu-button color=\"dark\"></ion-menu-button>\n\t\t\t\t</ion-buttons>\n\n\t\t\t\t<ion-title>Notes</ion-title>\n\n\t\t\t\t<ion-buttons class=\"endBtns\" slot=\"end\">\n\n\t\t\t\t\t<div id=\"selectionMode\">\n\t\t\t\t\t\t<span class=\"selectIcon material-symbols-outlined mdls\" v-if=\"display == 'Grille'\">grid_view</span>\n\t\t\t\t\t\t<span class=\"selectIcon material-symbols-outlined mdls\" v-if=\"display == 'Liste'\">list</span>\n\n\t\t\t\t\t\t<ion-select class=\"displaySel\" ref=\"displaySel\" @ionChange=\"changeDisplay($event)\" interface=\"popover\" placeholder=\"Affichage\" :value=\"display\">\n\t\t\t\t\t\t\t<ion-select-option value=\"Grille\">Grille</ion-select-option>\n\t\t\t\t\t\t\t<ion-select-option value=\"Liste\">Liste</ion-select-option>\n\t\t\t\t\t\t</ion-select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Transition name=\"ElemScale\">\n\t\t\t\t\t\t<ion-spinner v-if=\"isLoading\"></ion-spinner>\n\t\t\t\t\t</Transition>\n\t\t\t\t</ion-buttons>\n\t\t\t</IonToolbar>\n\t\t\t<IonToolbar v-if=\"md\">\n\t\t\t\t<ion-segment v-if=\"periods.length > 0\" id=\"segment\" :value=\"current_period.id\"\n\t\t\t\t\t\tref=\"segment\" @ionChange=\"segChange()\">\n\t\t\t\t\t<ion-segment-button v-for=\"(period, i) in periods\" :key=\"i\" :value=\"period.id\" :id=\"period.id\">\n\t\t\t\t\t\t<ion-label>{{period.name}}</ion-label>\n\t\t\t\t\t</ion-segment-button>\n\t\t\t\t</ion-segment>\n\t\t\t</IonToolbar>\n\t\t</IonHeader>\n\n\t\t<ion-content :fullscreen=\"true\">\n\t\t\t<ion-header collapse=\"condense\">\n\t\t\t\t<ion-toolbar>\n\t\t\t\t\t<ion-title size=\"large\">Notes</ion-title>\n\t\t\t\t</ion-toolbar>\n\t\t\t\t<IonToolbar v-if=\"!md\">\n\t\t\t\t\t<ion-segment v-if=\"periods.length > 0\" id=\"segment\" :value=\"current_period.id\"\n\t\t\t\t\t\tref=\"segment\" @ionChange=\"segChange()\">\n\t\t\t\t\t\t<ion-segment-button v-for=\"(period, i) in periods\" :key=\"i\" :value=\"period.id\" :id=\"period.id\">\n\t\t\t\t\t\t\t<ion-label>{{period.name}}</ion-label>\n\t\t\t\t\t\t</ion-segment-button>\n\t\t\t\t\t</ion-segment>\n\t\t\t\t</IonToolbar>\n\t\t\t</ion-header>\n\t\t\t\n\t\t\t<ion-refresher slot=\"fixed\" @ionRefresh=\"handleRefresh($event)\">\n\t\t\t\t<ion-refresher-content></ion-refresher-content>\n\t\t\t</ion-refresher>\n\n\t\t\t<div id=\"noTouchZone\"></div>\n\n\t\t\t<!-- <div v-if=\"isLoading\">\n\t\t\t\t<ion-card class=\"subject\" v-for=\"i in 6\" v-bind:key=\"i\">\n\t\t\t\t\t<div class=\"subject-name\" style=\"padding: 15px 15px\">\n\t\t\t\t\t\t<ion-skeleton-text :animated=\"true\" style=\"width: 50%;\"></ion-skeleton-text>\n\t\t\t\t\t\t<ion-skeleton-text class=\"avg\" :animated=\"true\" style=\"width: 20%;\"></ion-skeleton-text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"grades\" v-if=\"display == 'Grille'\">\n\t\t\t\t\t\t<ion-card class=\"grade\" v-for=\"i in 3\" v-bind:key=\"i\">\n\t\t\t\t\t\t\t<div class=\"myGrade\" style=\"width: 135px;\">\n\t\t\t\t\t\t\t\t<ion-skeleton-text :animated=\"true\" style=\"width: 50%;\"></ion-skeleton-text>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<ion-skeleton-text :animated=\"true\" style=\"width: 40%;\"></ion-skeleton-text>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"grades\">\n\t\t\t\t\t\t\t\t<ion-skeleton-text class=\"average\" :animated=\"true\"></ion-skeleton-text>\n\n\t\t\t\t\t\t\t\t<ion-skeleton-text class=\"average\" :animated=\"true\"></ion-skeleton-text>\n\n\t\t\t\t\t\t\t\t<ion-skeleton-text class=\"average\" :animated=\"true\"></ion-skeleton-text>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</ion-card>\n\t\t\t\t\t</div>\n\t\t\t\t</ion-card>\n\t\t\t</div> -->\n\n\t\t\t<transition-group name=\"CoursAnimLower\" tag=\"div\" id=\"NotesData\">\n\t\t\t\t<ion-item v-if=\"loginService === 'ecoledirecte'\">\n\t\t\t\t\t<div class=\"alphaMessage\">\n\t\t\t\t\t\t<span class=\"material-symbols-outlined mdls icon\">warning</span>\n\t\t\t\t\t\t<div class=\"alphaText\">\n\t\t\t\t\t\t\t<h2>Les moyennes affichées correspondent à celles calculées par EcoleDirecte.</h2>\n\t\t\t\t\t\t\t<p class=\"description\">Selon les paramètres définis par votre établissement, les moyennes peuvent être calculées à l'ajout d'une notes ou à intervale régulier.<br>Papillon ne saurait être tenu responsable de l'affichage d'une moyenne fausse.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\t\t\t\t\n\t\t\t\t</ion-item>\n\t\t\t\t<ion-card class=\"subject\" v-for=\"(subject, index) in grades\" v-bind:key=\"index\" :style=\"`--backgroundTheme: ${ subject.color };`\">\n\t\t\t\t\t<div class=\"subject-name\" @click=\"openAverageModal(subject)\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t{{subject.name}}\n\t\t\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" v-if=\"subject.grouped\">join_inner</span>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<p class=\"avg\" v-if=\"subject.significant\">{{subject.average.toFixed(2)}}<small>/20</small></p>\n\t\t\t\t\t\t<p class=\"avg\" v-if=\"!subject.significant\">{{subject.significantReason}}<small>/20</small></p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"grades\" v-if=\"display == 'Grille'\">\n\t\t\t\t\t\t<IonNavLink v-for=\"(mark, i) in subject.marks\" :key=\"i\" router-direction=\"forward\" :component=\"MarkView\" :componentProps=\"{markID: mark.id}\">\n\t\t\t\t\t\t\t<ion-card class=\"grade\">\n\t\t\t\t\t\t\t\t<div class=\"myGrade\">\n\t\t\t\t\t\t\t\t\t<p class=\"name\">{{ mark.info.description }}</p>\n\t\t\t\t\t\t\t\t\t<p class=\"coef\">Coeff. : {{mark.grade.coefficient}}</p>\n\n\t\t\t\t\t\t\t\t\t<p class=\"grd main\" v-if=\"mark.info.significant && !mark.grade.updated_value\">\n\t\t\t\t\t\t\t\t\t\t{{mark.grade.value}}<small>/{{mark.grade.out_of}}</small></p>\n\t\t\t\t\t\t\t\t\t<p class=\"grd main\" v-else-if=\"mark.grade.updated_value && mark.info.significant\">\n\t\t\t\t\t\t\t\t\t\t{{mark.grade.updated_value}}<small>/{{mark.grade.updated_out_of}}</small></p>\n\t\t\t\t\t\t\t\t\t<p class=\"coef\" v-if=\"mark.grade.updated_value && mark.info.significant\">\n\t\t\t\t\t\t\t\t\t\t{{mark.grade.value}}<small>/{{mark.grade.out_of}}</small></p>\n\n\t\t\t\t\t\t\t\t\t<!-- si absent -->\n\t\t\t\t\t\t\t\t\t<p class=\"grd main\" v-if=\"!mark.info.significant\">\n\t\t\t\t\t\t\t\t\t\t{{ mark.info.significantReason }}<small>/{{mark.grade.out_of}}</small></p>\n\t\t\t\t\t\t\t\t\t<p class=\"coef\" v-if=\"mark.grade.updated_value && !mark.info.significant\"><br /></p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"averages\" v-if=\"mark.info.significantAverage && !isNaN(mark.grade.min)\">\n\t\t\t\t\t\t\t\t\t<div class=\"average\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"grd\">{{mark.grade.min}}<small>/{{mark.grade.out_of}}</small></p>\n\t\t\t\t\t\t\t\t\t\t<p>Min.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"average class\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"grd\">{{mark.grade.average}}<small>/{{mark.grade.out_of}}</small></p>\n\t\t\t\t\t\t\t\t\t\t<p>Classe</p>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"average\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"grd\">{{mark.grade.max}}<small>/{{mark.grade.out_of}}</small></p>\n\t\t\t\t\t\t\t\t\t\t<p>Max.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"averages\" v-if=\"!mark.info.significantAverage && !isNaN(mark.grade.min)\">\n\t\t\t\t\t\t\t\t\t<div class=\"average unique\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"grd\">{{ mark.info.significantReason }}</p>\n\t\t\t\t\t\t\t\t\t\t<p>Classe</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"averages\" v-if=\"isNaN(mark.grade.min)\">\n\t\t\t\t\t\t\t\t\t<div class=\"average unique\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"grd\">Moyennes non dispo.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</ion-card>\n\t\t\t\t\t\t</IonNavLink>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ion-list lines=\"inset\" class=\"gradesList\" v-if=\"display == 'Liste'\">\n\t\t\t\t\t\t<IonNavLink class=\"gradeNavLink\" v-for=\"(mark, i) in subject.marks\" :key=\"i\" router-direction=\"forward\" :component=\"MarkView\" :componentProps=\"{markID: mark.id}\">\n\t\t\t\t\t\t\t<ion-item class=\"gradeItem\" button detail=\"false\">\n\t\t\t\t\t\t\t\t<ion-text slot=\"start\" class=\"emoji\">{{ getClosestGradeEmoji(subject.name) }}</ion-text>\n\n\t\t\t\t\t\t\t\t<ion-label>\n\t\t\t\t\t\t\t\t\t<h2>{{ mark.info.description }}</h2>\n\t\t\t\t\t\t\t\t\t<p>{{ new Date(mark.info.date).toLocaleString('fr-FR', {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'}) }}</p>\n\t\t\t\t\t\t\t\t\t<h4>Coeff. : {{mark.grade.coefficient}}</h4>\n\t\t\t\t\t\t\t\t</ion-label>\n\n\t\t\t\t\t\t\t\t<ion-label slot=\"end\" class=\"markLabel\" style=\"text-align: right;\">\n\t\t\t\t\t\t\t\t\t<h2 v-if=\"mark.info.significant && !mark.grade.updated_value\">{{mark.grade.value}}<small>/{{mark.grade.out_of}}</small></h2>\n\t\t\t\t\t\t\t\t\t<h2 v-else-if=\"mark.grade.updated_value && mark.info.significant\">{{mark.grade.updated_value}}<small>/{{mark.grade.updated_out_of}}</small></h2>\n\n\t\t\t\t\t\t\t\t\t<p class=\"coef\" v-if=\"mark.grade.updated_value && mark.grade.out_of != 20 && mark.info.significant\">\n\t\t\t\t\t\t\t\t\t\t{{mark.grade.value}}<small>/{{mark.grade.out_of}}</small>\n\t\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t\t\t<!-- si absent -->\n\t\t\t\t\t\t\t\t\t<h2 v-if=\"!mark.info.significant\">{{ mark.info.significantReason }}<small>/{{mark.grade.out_of}}</small></h2>\n\t\t\t\t\t\t\t\t</ion-label>\n\t\t\t\t\t\t\t</ion-item>\n\t\t\t\t\t\t</IonNavLink>\n\t\t\t\t\t</ion-list>\n\t\t\t\t</ion-card>\n\t\t\t</transition-group>\n\n\t\t\t<div v-if=\"!isLoading\">\n\t\t\t\t<div class=\"NoCours\" v-if=\"this.grades.length == 0\">\n\t\t\t\t\t<span class=\"material-symbols-outlined mdls\">insights</span>\n\t\t\t\t\t<h2>Pas de notes ajoutées pour cette période</h2>\n\t\t\t\t\t<p>Réesayez avec une autre période à l'aide du sélecteur.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<ion-list inset>\n\t\t\t\t<IonNavLink router-direction=\"forward\" :component=\"GradesInsightsView\">\n\t\t\t\t\t<IonItem button>\n\t\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" slot=\"start\">query_stats</span>\n\t\t\t\t\t\t<IonLabel class=\"ion-text-wrap\">\n\t\t\t\t\t\t\t<h2>Papillon Insights <ion-chip class=\"small_chip\" color=\"warning\">Nouveau</ion-chip></h2>\n\t\t\t\t\t\t\t<p>Statistiques, analyses et données complémentaires sur vos notes</p>  \n\t\t\t\t\t\t</IonLabel>\n\n\t\t\t\t\t</IonItem>\n\t\t\t\t</IonNavLink>\n\t\t\t</ion-list>\n\n\t\t\t<IonList v-if=\"this.grades.length != 0 && averages.average != -1\">\n\t\t\t\t<IonListHeader>\n\t\t\t\t\t<IonLabel>\n\t\t\t\t\t\t<h2>Moyennes</h2>\n\t\t\t\t\t</IonLabel>\n\t\t\t\t</IonListHeader>\n\n\t\t\t\t<IonItem>\n\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" slot=\"start\">person</span>\n\t\t\t\t\t<IonLabel>\n\t\t\t\t\t\t<p>Moyenne générale</p>\n\t\t\t\t\t\t<h2>{{ averages.average.toFixed(2) }}<small>/20</small></h2>\n\t\t\t\t\t</IonLabel>\n\t\t\t\t</IonItem>\n\t\t\t\t<IonItem>\n\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" slot=\"start\">groups</span>\n\t\t\t\t\t<IonLabel>\n\t\t\t\t\t\t<p>Moyenne de classe</p>\n\t\t\t\t\t\t<h2>{{ classAverages.average.toFixed(2) }}<small>/20</small></h2>\n\t\t\t\t\t</IonLabel>\n\t\t\t\t</IonItem>\n\t\t\t\t<div style=\"display:flex\" @click=\"displayBiasedMsg\">\n\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" slot=\"start\">swap_vert</span>\n\t\t\t\t\t\t<IonLabel>\n\t\t\t\t\t\t\t<p>Meilleure moyenne</p>\n\t\t\t\t\t\t\t<h2>{{ classAverages.max.toFixed(2) }}<small>/20</small></h2>\n\t\t\t\t\t\t</IonLabel>\n\t\t\t\t\t</IonItem>\n\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t<IonLabel>\n\t\t\t\t\t\t\t<p>Moins bonne moyenne</p>\n\t\t\t\t\t\t\t<h2>{{ classAverages.min.toFixed(2) }}<small>/20</small></h2>\n\t\t\t\t\t\t</IonLabel>\n\t\t\t\t\t</IonItem>\n\t\t\t\t</div>\n\t\t\t\t<ion-item v-if=\"loginService === 'ecoledirecte'\">\n\t\t\t\t\t<p>Moyennes calculées le {{ calcAverage[0] }} à {{ calcAverage[1] }}</p>\n\t\t\t\t</ion-item>\n\t\t\t</IonList>\n\n\t\t\t<IonModal ref=\"averageModal\" :keep-contents-mounted=\"true\" :initial-breakpoint=\"0.5\"\n\t\t\t\t:breakpoints=\"[0, 0.5, 0.9]\" :handle=\"true\" :canDismiss=\"true\">\n\t\t\t\t<IonHeader>\n\t\t\t\t\t<IonToolbar>\n\t\t\t\t\t\t<ion-title>{{ selectedMark.subject }}</ion-title>\n\t\t\t\t\t</IonToolbar>\n\t\t\t\t</IonHeader>\n\t\t\t\t<ion-content>\n\t\t\t\t\t<ion-list>\n\t\t\t\t\t\t<ion-item>\n\t\t\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" slot=\"start\">face</span>\n\t\t\t\t\t\t\t<ion-label>\n\t\t\t\t\t\t\t\t<p>Ma moyenne</p>\n\t\t\t\t\t\t\t\t<h2>{{ selectedMark.average }}<small>/20</small></h2>\n\t\t\t\t\t\t\t</ion-label>\n\t\t\t\t\t\t</ion-item>\n\n\t\t\t\t\t\t<ion-item>\n\t\t\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" slot=\"start\">groups</span>\n\t\t\t\t\t\t\t<ion-label>\n\t\t\t\t\t\t\t\t<p>Moyenne de classe</p>\n\t\t\t\t\t\t\t\t<h2>{{ selectedMark.class_average }}<small>/20</small></h2>\n\t\t\t\t\t\t\t</ion-label>\n\t\t\t\t\t\t</ion-item>\n\n\t\t\t\t\t\t<ion-item>\n\t\t\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" slot=\"start\">person_remove</span>\n\t\t\t\t\t\t\t<ion-label>\n\t\t\t\t\t\t\t\t<p>Moyenne la plus basse</p>\n\t\t\t\t\t\t\t\t<h2>{{ selectedMark.min_average }}<small>/20</small></h2>\n\t\t\t\t\t\t\t</ion-label>\n\t\t\t\t\t\t</ion-item>\n\n\t\t\t\t\t\t<ion-item>\n\t\t\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" slot=\"start\">person_add</span>\n\t\t\t\t\t\t\t<ion-label>\n\t\t\t\t\t\t\t\t<p>Moyenne la plus haute</p>\n\t\t\t\t\t\t\t\t<h2>{{ selectedMark.max_average }}<small>/20</small></h2>\n\t\t\t\t\t\t\t</ion-label>\n\t\t\t\t\t\t</ion-item>\n\n\t\t\t\t\t\t<ion-item v-if=\"selectedMark.grouped\">\n\t\t\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" slot=\"start\">join_inner</span>\n\t\t\t\t\t\t\t<ion-label class=\"ion-text-wrap\">\n\t\t\t\t\t\t\t\t<p>Combinaison</p>\n\t\t\t\t\t\t\t\t<h3>Cette matière est un regroupement de plusieurs matières.</h3>\n\t\t\t\t\t\t\t</ion-label>\n\n\t\t\t\t\t\t\t<ion-button class=\"itemBtn\" fill=\"clear\" slot=\"end\"\n\t\t\t\t\t\t\t\t@click=\"setExcludedJoinSubject(selectedMark.subject)\">\n\t\t\t\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" slot=\"start\">visibility_off</span>\n\t\t\t\t\t\t\t\tNe pas regrouper\n\t\t\t\t\t\t\t</ion-button>\n\t\t\t\t\t\t</ion-item>\n\n\t\t\t\t\t\t<ion-item v-else-if=\"selectedMark.excluded\">\n\t\t\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" slot=\"start\">join</span>\n\t\t\t\t\t\t\t<ion-label class=\"ion-text-wrap\">\n\t\t\t\t\t\t\t\t<p>Exclue</p>\n\t\t\t\t\t\t\t\t<h3>Cette matière n'est actuellement pas regroupée</h3>\n\t\t\t\t\t\t\t</ion-label>\n\n\t\t\t\t\t\t\t<ion-button class=\"itemBtn\" fill=\"clear\" slot=\"end\"\n\t\t\t\t\t\t\t\t@click=\"setExcludedJoinSubject(selectedMark.subject)\">\n\t\t\t\t\t\t\t\t<span class=\"material-symbols-outlined mdls\" slot=\"start\">visibility</span>\n\t\t\t\t\t\t\t\tRegrouper\n\t\t\t\t\t\t\t</ion-button>\n\t\t\t\t\t\t</ion-item>\n\t\t\t\t\t</ion-list>\n\t\t\t\t</ion-content>\n\t\t\t</IonModal>\n\n\t\t</ion-content>\n\t</ion-page>\n</template>\n\n<style scoped>\n\t.alphaMessage {\n\t\tbackground: var(--ion-color-warning);\n\t\tmargin: 20px;\n\t\tborder-radius: 10px;\n\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\n\t\tpadding: 20px;\n\t\tgap: 20px;\n\n\t\tcolor: #fff;\n\t}\n\n\t.alphaMessage * {\n\t\tmargin: 0;\n\t}\n\n\t.alphaMessage .icon {\n\t\theight: 44px;\n\t\twidth: 44px;\n\t\tfont-size: 30px;\n\t\toverflow: visible !important;\n\n\t\tcolor: #fff;\n\t\topacity: 1 !important;\n\t}\n\n\t.alphaMessage .alphaText {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 5px;\n\t}\n\n\t.alphaMessage .alphaText h2 {\n\t\tfont-size: 18px;\n\t}\n\n\t.alphaMessage .alphaText .description {\n\t\tfont-size: 15px;\n\t\topacity: 0.7;\n\t}\n\t.emoji {\n\t\tfont-size: 1.3rem;\n\t}\n\n\t.subject {\n\t\toverflow: hidden;\n\t\tborder-radius: 10px !important;\n\n\t\t--ion-item-background: transparent;\n\t}\n\n\t.subject-name {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 10px 15px;\n\t\tbackground: linear-gradient(90deg, #00000055 0%, #00000055 100%), var(--backgroundTheme);\n\t}\n\n\t.subject-name * {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tcolor: #fff;\n\t}\n\n\t.subject-name h3 {\n\t\tfont-size: 1rem;\n\t\tfont-weight: 500;\n\t}\n\n\t.subject-name h3 span {\n\t\tmargin-left: 5px;\n\t\tfont-size: 0.8rem;\n\t\tfont-weight: 400;\n\t\tvertical-align: middle;\n\t\topacity: 60%;\n\t}\n\n\t.subject-name p {\n\t\tfont-size: 1rem;\n\t\tfont-weight: 400;\n\t}\n\n\t.subject-name p small {\n\t\tfont-size: 0.8rem;\n\t\tfont-weight: 400;\n\t\topacity: 50%;\n\t}\n\n\t.grades * {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\n\t.grades {\n\t\tpadding: 15px 15px;\n\t\tdisplay: flex;\n\t\tgap: 15px;\n\t\toverflow-y: scroll;\n\t}\n\n\t.grade {\n\t\twidth: 100%;\n\t\tborder-radius: 8px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmin-width: fit-content;\n\t\tmax-width: fit-content;\n\t\tisolation: isolate;\n\t\toverflow: hidden;\n\t}\n\n\t.dark .grade {\n\t\tbackground: var(--ion-color-step-100);\n\t}\n\n\t.myGrade {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: flex-start;\n\t\talign-items: flex-start;\n\t\tborder-bottom: 1px solid var(--ion-color-step-100);\n\t\tpadding: 10px 10px;\n\t}\n\n\t.myGrade p.grd {\n\t\tfont-size: 1.3rem;\n\t\tfont-weight: 600;\n\t\tcolor: var(--ion-text-color);\n\t\tmargin-top: 5px;\n\t\tfont-family: var(--papillon-font) !important;\n\t}\n\n\t.myGrade p.name {\n\t\tfont-size: 1rem;\n\t\tfont-weight: 500;\n\t\tcolor: var(--ion-text-color);\n\t\twidth: 130px;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\twhite-space: nowrap;\n\t}\n\n\t.myGrade p.coef {\n\t\tfont-size: 0.8rem;\n\t\tfont-weight: 400;\n\t\topacity: 50%;\n\t}\n\n\t.myGrade .grd small {\n\t\tfont-size: 1rem;\n\t\tfont-weight: 400;\n\t\topacity: 50%;\n\t}\n\n\t.averages {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 10px 10px;\n\t\tgap: 10px;\n\t}\n\n\t.average {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tgap: 5px;\n\t}\n\n\t.average p.grd {\n\t\tfont-size: 1rem;\n\t\tfont-weight: 500;\n\t\tcolor: var(--ion-text-color);\n\t\tfont-family: var(--papillon-font) !important;\n\t}\n\n\t.average p.grd small {\n\t\tfont-size: 0.8rem;\n\t\tfont-weight: 400;\n\t\topacity: 50%;\n\t}\n\n\t.average p:not(.grd) {\n\t\tfont-size: 0.8rem;\n\t\tfont-weight: 400;\n\t\topacity: 50%;\n\t}\n\n\t.average.unique {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tgap: 5px;\n\t}\n\n\t.ios .grade {\n\t\tborder: 1px solid var(--ion-color-step-50);\n\t\tborder-radius: 8px;\n\t}\n\n\t.myGrade {\n\t\tborder: none;\n\t\tbackground: linear-gradient(90deg, #00000055 0%, #00000055 100%), var(--backgroundTheme);\n\t}\n\n\t.myGrade * {\n\t\tcolor: #fff !important;\n\t}\n\n\t.ios #segment {\n\t\twidth: calc(100vw - 24px);\n\t\tmargin: 0 12px;\n\t\tmargin-top: -8px;\n\t}\n\n\t.md .grade {\n\t\tborder: 1px solid var(--ion-color-step-50);\n\t\tborder-radius: 8px;\n\t}\n\n\tion-spinner {\n\t\tmargin-right: 0px;\n\t}\n\n\t.markToolbar {\n\t\tmargin: 0 !important;\n\t}\n\n\t.markToolbar ion-label * {\n\t\ttext-align: center;\n\t\tmargin: 0;\n\t}\n\n\t.markToolbar h2 {\n\t\tmargin-top: 7px !important;\n\t}\n\n\t.markToolbar p {\n\t\tmargin-bottom: 2px !important;\n\t}\n\n\tion-buttons.endBtns {\n\t\tmargin-right: 10px;\n\t}\n\n\t.gradeItem {\n\t\t--background: var(--ion-toolbar-background);\n\t}\n\n\t.gradeItem .markLabel h2 {\n\t\tfont-weight: 500 !important;\n\t}\n\n\t.selectIcon {\n\t\tmargin-right: -12px;\n\t\topacity: 48%;\n\t}\n\n\t.gradesList {\n\t\t--ion-item-background: var(--ion-color-step-50);\n\t\tbackground: var(--ion-color-step-50);\n\t}\n\n\t@media screen and (min-width: 900px) {\n\t\t#NotesData {\n\t\t\tdisplay: grid;\n\t\t\tgrid-template-columns: 1fr 1fr;\n\t\t}\n\t}\n\n\t.ios .gradeItem {\n\t\t--border-color: var(--ion-color-step-150);\n\t}\n\n\t.gradeNavLink:last-child .gradeItem {\n\t\t--border-color: transparent;\n\t}\n\n\tion-card {\n\t\tbox-shadow: var(--ion-box-shadow);\n\t\tbackground: var(--ion-item-background);\n\t}\n\n\t.dark ion-card {\n\t\tbackground: var(--ion-color-step-50);\n\t}\n\n\t.periodSeg {\n\t\tpadding-top: 5px;\n\t}\n\n\t.ios #NotesData {\n\t\tmargin-top: -15px;\n\t}\n\n\t#selectionMode {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\n\t\tgap: 5px;\n\t\tpadding: 3px 8px;\n\n\t\tbackground: rgba(var(--ion-text-color-rgb), 0.08);\n\t\tborder-radius: 8px;\n\t}\n\n\t.md #selectionMode {\n\t\tborder-radius: 300px;\n\t\tmargin-top: -2px;\n\n\t\tbackground: none;\n\t\tborder: 1px solid rgba(var(--ion-text-color-rgb), 0.15);\n\t}\n\n\t.displaySel {\n\t\tpadding: 0;\n\t}\n\n\t#selectionMode {\n\t\theight: 32px;\n\t\tpadding-right: 2px !important;\n\t}\n\n\t#selectionMode * {\n\t\tmargin: 0;\n\t}\n\n\t#selectionMode .mdls {\n\t\theight: fit-content;\n\t\twidth: fit-content;\n\t}\n\n\tion-spinner {\n\t\tmargin-left: 15px;\n\t}\n</style>\n","<script>\n\timport {\n\t\tdefineComponent\n\t} from 'vue';\n\timport {\n\t\tIonHeader,\n\t\tIonToolbar,\n\t\tIonList,\n\t\tIonItem,\n\t\tIonLabel,\n\t\tIonButtons,\n\t\tIonTitle,\n\t\tIonContent,\n        IonBackButton,\n        IonRange\n\t} from '@ionic/vue';\n\n    import { Line } from 'vue-chartjs'\n    \n    import { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, PointElement, LineElement} from 'chart.js'\n    ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, PointElement, LineElement)\n\n    import GetGrades from '@/functions/fetch/GetGrades.js';\n\n\texport default defineComponent({\n\t\tname: 'FolderPage',\n\t\tcomponents: {\n\t\t\tIonHeader,\n\t\t\tIonToolbar,\n\t\t\tIonButtons,\n\t\t\tIonBackButton,\n\t\t\tIonTitle,\n\t\t\tIonContent,\n\t\t\tIonList,\n\t\t\tIonItem,\n\t\t\tIonLabel,\n            Line,\n            IonRange\n\t\t},\n\t\tdata() {\n            let backTitle = 'Retour';\n\n\t\t\t// get current route\n\t\t\tconst currentRoute = this.$router.currentRoute.value;\n\n\t\t\tif(currentRoute.name == \"Grades\") {\n\t\t\t\tbackTitle = 'Notes';\n\t\t\t}\n\n            // get --ion-color-primary-rgb\n            const primaryColor = getComputedStyle(document.body).getPropertyValue('--ion-color-primary-rgb');\n\n            // grades data\n            const data = {\n                labels: ['0'],\n                datasets: [\n                    {\n                        label: 'Moyenne générale',\n                        data: [10],\n                        backgroundColor: 'rgb('+primaryColor+')',\n                        borderColor: 'rgb('+primaryColor+')',\n                        tension: 0.5,\n                        pointRadius: 0,\n                        pointHoverRadius: 8,\n                        pointHitRadius: 25,\n                    },\n                ]\n            };\n\n            // grades options\n            const options = {\n                scales: {\n                    x: {\n                        ticks: {\n                            font: {\n                                size: 13,\n                                family: 'system-ui, sans-serif',\n                            },\n                        }\n                    },\n                    y: {\n                        ticks: {\n                            font: {\n                                size: 13,\n                                weight: 500,\n                                family: 'system-ui, sans-serif',\n                            },\n                        }\n                    }\n                },\n                plugins: {\n                    legend: {\n                        display: false\n                    },\n                    tooltip: {\n                        cornerRadius: 8,\n                        titleFont: {\n                            size: 14,\n                            weight: 600,\n                            family: 'system-ui, sans-serif',\n                        },\n                        bodyFont: {\n                            size: 13,\n                            weight: 400,\n                            family: 'system-ui, sans-serif',\n                        },\n                    }\n                },\n            };\n\n\t\t\treturn {\n                scale: 5,\n                backTitle: backTitle,\n                grades: [],\n                chartData: data,\n                chartOptions: options\n\t\t\t}\n\t\t},\n\t\tmethods: {\n            getWeekNumber(date) {\n                // return week number of date\n                const d = new Date(date);\n                d.setHours(0, 0, 0, 0);\n                d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n                const yearStart = new Date(d.getFullYear(), 0, 1);\n                const weekNo = Math.ceil((((d - yearStart) / 86400000) + 1) / 7);\n                return weekNo;\n            },\n\t\t\tgetAverage(grades, classAvg) {\n\t\t\t\tconst allGrades = {};\n\n\t\t\t\tfor (let i = 0; i < grades.length; i++) {\n\t\t\t\t\tif(grades[i].info.significant === false && grades[i].info.significantZero === false) continue;\n\n\t\t\t\t\tlet val = parseFloat(grades[i].grade.value);\n\n\t\t\t\t\tif(classAvg) val = parseFloat(grades[i].grade.average);\n\n\t\t\t\t\tconst out_of = parseInt(grades[i].grade.out_of);\n\n\t\t\t\t\tconst out20 = (val / out_of) * 20;\n\n\t\t\t\t\t// create key if not exists\n\t\t\t\t\tif(!allGrades[grades[i].info.subject]) {\n\t\t\t\t\t\tallGrades[grades[i].info.subject] = {};\n\n\t\t\t\t\t\tallGrades[grades[i].info.subject].grades = 0;\n\t\t\t\t\t\tallGrades[grades[i].info.subject].count = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tallGrades[grades[i].info.subject].grades += out20 * grades[i].grade.coefficient;\n\t\t\t\t\tallGrades[grades[i].info.subject].count += grades[i].grade.coefficient;\n\t\t\t\t}\n\n\t\t\t\t// calculate average of each subject\n\t\t\t\tfor (const subject in allGrades) {\n\t\t\t\t\tallGrades[subject].average = allGrades[subject].grades / allGrades[subject].count;\n\t\t\t\t}\n\n\t\t\t\t// calculate average of all subjects\n\t\t\t\tlet total = 0;\n\t\t\t\tlet count = 0;\n\n\t\t\t\tfor (const subject in allGrades) {\n\t\t\t\t\ttotal += allGrades[subject].average;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\n\t\t\t\treturn total / count;\n\t\t\t},\n            getAverageEvolution() {\n                // get average of all grades\n                const labels = [];\n                const values = [];\n\n                const indexes = [];\n\n                let lastAverage = 0;\n                let i = 0;\n                let max = this.scale;\n\n                console.log(this.scale);\n\n                // get average of 15 last days\n                while(i < max) {\n                    const date = new Date();\n                    date.setDate(date.getDate() - i);\n\n                    const average = this.getAverage(this.grades.filter((grade) => {\n                        const gradeDate = new Date(grade.info.date);\n\n                        return gradeDate.getTime() <= date.getTime();\n                    }), false).toFixed(2);\n\n                    // if lastAverage is the same as average, skip this day\n                    if(lastAverage == average) {\n                        max += 1;\n                    }\n                    else {\n                        indexes.push(i);\n                        lastAverage = average;\n\n                        const dayStr = date.toLocaleDateString('fr-FR', { day: 'numeric', month: 'short' });\n\n                        labels.push(dayStr);\n                        values.push(average);\n                    }\n\n                    i++;\n                }\n                \n                // invert arrays\n                labels.reverse();\n                values.reverse();\n\n                this.$refs.chart.chart.data.labels = labels;\n                this.$refs.chart.chart.data.datasets[0].data = values;\n\n                this.$refs.chart.chart.update();\n            },\n            changeScale($event) {\n                const scale = $event.target.value;\n\n                this.scale = (this.grades.length - 10) - Math.round(scale);\n\n                this.getAverageEvolution();\n            }\n\t\t},\n\t\tmounted() {\n            // fetch grades\n            GetGrades().then((data) => {\n\t\t\t\tdata.marks.forEach((subject) => {\n\t\t\t\t\tsubject.marks.forEach((mark) => {\n\t\t\t\t\t\tthis.grades.push(mark);\n\n                        this.scale = Math.round((this.grades.length - 10) / 2);\n                        this.getAverageEvolution();\n\t\t\t\t\t});\n\t\t\t\t});\n            });\n\n            return false;\n        }\n\t});\n</script>\n\n<template>\n\t\t<IonHeader class=\"AppHeader\" translucent>\n\t\t\t<IonToolbar>\n\t\t\t\t<ion-buttons slot=\"start\">\n\t\t\t\t\t<IonBackButton class=\"only-ios\" :text=\"backTitle\" @click=\"pop\"></IonBackButton>\n\t\t\t\t\t<IonBackButton class=\"only-md\" @click=\"pop\"></IonBackButton>\n\t\t\t\t</ion-buttons>\n\n                <ion-title>Insights</ion-title>\n\t\t\t</IonToolbar>\n\t\t</IonHeader>\n\n\t\t<ion-content :fullscreen=\"true\">\n            <IonList inset>\n                <IonItem color=\"primary\">\n                    <span class=\"material-symbols-outlined mdls\" slot=\"start\">query_stats</span>\n                    <IonLabel class=\"ion-text-wrap\">\n                        <h2>Insights est une fonctionnalité expérimentale</h2>\n                        <p>Les données affichées peuvent être erronées et des bugs peuvent survenir.</p>\n                    </IonLabel>\n                </IonItem>\n            </IonList>\n\n            <IonList inset class=\"chartList\" lines=\"none\">\n                <IonItem>\n                    <IonLabel>\n                        <h2>Évolution de la moyenne générale</h2>\n                        <p>sur les notes les plus récentes</p>\n                    </IonLabel>\n                </IonItem>\n\n                <Line class=\"chartCanvas\" ref=\"chart\" id=\"my-chart-id\" :data=\"chartData\" :options=\"chartOptions\" />\n\n                <IonItem>\n                    <div class=\"zoom\" slot=\"end\">\n                        <span class=\"material-symbols-outlined mdls\">zoom_out</span>\n\n                        <IonRange class=\"range\" @ionChange=\"changeScale($event)\" :min=\"0\" :max=\"this.grades.length - 12\" :value=\"Math.round((this.grades.length - 10) / 2)\"></IonRange>\n\n                        <span class=\"material-symbols-outlined mdls\">zoom_in</span>\n                    </div>\n                </IonItem>\n            </IonList>\n\t\t</ion-content>\n</template>\n\n<style scoped>\n    .chartList ion-label * {\n        text-align: center;\n    }\n\n    .chartList {\n        padding-top: 5px;\n    }\n\n    .chartList .chartCanvas {\n        margin: 5px;\n        margin-top: 0px;\n    }\n\n    .range {\n        height: 10px;\n    }\n\n    .zoom {\n        margin-top: -15px;\n\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        width: 60%;\n\n        background: var(--ion-color-step-50);\n        border-radius: 50px;\n\n        padding: 3px 10px;\n    }\n</style>\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.3.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onBeforeUnmount, watch, h } from 'vue';\nimport { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    ...CommonProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                chart.destroy();\n                chartRef.value = null;\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onBeforeUnmount(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                update(chart);\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                ref: canvasRef\n            });\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","import { render } from \"./GradesInsightsView.vue?vue&type=template&id=e9dc7a58&scoped=true\"\nimport script from \"./GradesInsightsView.vue?vue&type=script&lang=js\"\nexport * from \"./GradesInsightsView.vue?vue&type=script&lang=js\"\n\nimport \"./GradesInsightsView.vue?vue&type=style&index=0&id=e9dc7a58&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/vincelinise/Documents/GitHub/Papillon/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e9dc7a58\"]])\n\nexport default __exports__","import { app } from '@/main.ts'\n\n// get token\nfunction changePeriod(name) {\n    switch(localStorage.loginService) {\n        case \"pronote\":    \n            return changePronotePeriod(name);\n\t\tcase \"ecoledirecte\":\n            return changeEDPeriod(name)\n    }\n    \n}\n\n// pronote : get token\nfunction changePronotePeriod(name) {\n    // gather vars\n    const API = app.config.globalProperties.$api;\n    const token = localStorage.getItem('token');\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                    \n    const urlencoded = new URLSearchParams();\n    urlencoded.append(\"token\", token);\n    urlencoded.append(\"periodName\", name);\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: urlencoded,\n        redirect: 'follow'\n    };\n\n    // get token from API\n    return fetch(API + \"/changePeriod\", requestOptions)\n    .then(response => response.json())\n}\n\n\nfunction changeEDPeriod(name) {\n    return new Promise((resolve) => {\n        resolve({ \"status\": \"ok\", \"period\": name })\n    });\n}\n\n// export\nexport default changePeriod;","import { render } from \"./GradesView.vue?vue&type=template&id=26aed103&scoped=true\"\nimport script from \"./GradesView.vue?vue&type=script&lang=js\"\nexport * from \"./GradesView.vue?vue&type=script&lang=js\"\n\nimport \"./GradesView.vue?vue&type=style&index=0&id=26aed103&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/vincelinise/Documents/GitHub/Papillon/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-26aed103\"]])\n\nexport default __exports__","\n    import { IonNav, IonPage } from '@ionic/vue';\n    import GradesView from './GradesView.vue';\n\n    //import { StatusBar, Style } from '@capacitor/status-bar';\n\n    //let inner = true;\n  \n    export default {\n      components: { IonNav, IonPage },\n      data() {\n        return {\n          component: GradesView,\n          changeTimeout: null as any\n        };\n      },\n      methods: {\n        navWillChange() {\n          return false;\n        },\n        navDidChange() {\n          return false;\n        }\n      },\n      mounted() {\n        return false;\n      }\n    };\n","import { render } from \"./GradesSetup.vue?vue&type=template&id=6080c8f0&ts=true\"\nimport script from \"./GradesSetup.vue?vue&type=script&lang=ts\"\nexport * from \"./GradesSetup.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/Users/vincelinise/Documents/GitHub/Papillon/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\n\timport {\n\t\tdefineComponent\n\t} from 'vue';\n\timport {\n\t\tIonHeader,\n\t\tIonToolbar,\n\t\tIonList,\n\t\tIonItem,\n\t\tIonLabel,\n\t\tIonButtons,\n\t\tIonTitle,\n\t\tIonContent,\n\t\tIonSkeletonText,\n\t\tIonChip,\n\t\tIonBackButton\n\t} from '@ionic/vue';\n\n\timport GetGrades from '@/functions/fetch/GetGrades.js';\n\n\texport default defineComponent({\n\t\tname: 'FolderPage',\n\t\tcomponents: {\n\t\t\tIonHeader,\n\t\t\tIonToolbar,\n\t\t\tIonButtons,\n\t\t\tIonBackButton,\n\t\t\tIonTitle,\n\t\t\tIonContent,\n\t\t\tIonSkeletonText,\n\t\t\tIonList,\n\t\t\tIonItem,\n\t\t\tIonLabel,\n\t\t\tIonChip\n\t\t},\n\t\tprops: {\n\t\t\tmarkID: {\n\t\t\t\ttype: String,\n\t\t\t\trequired: true,\n\t\t\t}\n\t\t},\n\t\tdata() {\n\t\t\tlet backTitle = 'Retour';\n\n\t\t\t// get current route\n\t\t\tconst currentRoute = this.$router.currentRoute.value;\n\n\t\t\tif(currentRoute.name == \"Grades\") {\n\t\t\t\tbackTitle = 'Notes';\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbackTitle: backTitle,\n\t\t\t\tgrades: [],\n\t\t\t\tcurrentGrade: null,\n\t\t\t\tdiffAvg: 0,\n\t\t\t\tdiffClassAvg: 0,\n\t\t\t\tdiffSubjectAvg: 0\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tfindGrade(id) {\n\t\t\t\tGetGrades().then((data) => {\n\t\t\t\t\tdata.marks.forEach((subject) => {\n\t\t\t\t\t\tsubject.marks.forEach((mark) => {\n\t\t\t\t\t\t\tthis.grades.push(mark);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.grades.forEach((grade) => {\n\t\t\t\t\t\tif(grade.id === id) {\n\t\t\t\t\t\t\tthis.currentGrade = grade;\n\n\t\t\t\t\t\t\tthis.getAverageInfluence();\n\t\t\t\t\t\t\tthis.getAverageClassInfluence();\n\t\t\t\t\t\t\tthis.getAverageSubjectInfluence();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tgetAverage(grades, classAvg) {\n\t\t\t\tconst allGrades = {};\n\n\t\t\t\tfor (let i = 0; i < grades.length; i++) {\n\t\t\t\t\tif(grades[i].info.significant === false && grades[i].info.significantZero === false) continue;\n\n\t\t\t\t\tlet val = parseFloat(grades[i].grade.value);\n\n\t\t\t\t\tif(classAvg) val = parseFloat(grades[i].grade.average);\n\n\t\t\t\t\tconst out_of = parseInt(grades[i].grade.out_of);\n\n\t\t\t\t\tconst out20 = (val / out_of) * 20;\n\n\t\t\t\t\t// create key if not exists\n\t\t\t\t\tif(!allGrades[grades[i].info.subject]) {\n\t\t\t\t\t\tallGrades[grades[i].info.subject] = {};\n\n\t\t\t\t\t\tallGrades[grades[i].info.subject].grades = 0;\n\t\t\t\t\t\tallGrades[grades[i].info.subject].count = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tallGrades[grades[i].info.subject].grades += out20 * grades[i].grade.coefficient;\n\t\t\t\t\tallGrades[grades[i].info.subject].count += grades[i].grade.coefficient;\n\t\t\t\t}\n\n\t\t\t\t// calculate average of each subject\n\t\t\t\tfor (const subject in allGrades) {\n\t\t\t\t\tallGrades[subject].average = allGrades[subject].grades / allGrades[subject].count;\n\t\t\t\t}\n\n\t\t\t\t// calculate average of all subjects\n\t\t\t\tlet total = 0;\n\t\t\t\tlet count = 0;\n\n\t\t\t\tfor (const subject in allGrades) {\n\t\t\t\t\ttotal += allGrades[subject].average;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\n\t\t\t\treturn total / count;\n\t\t\t},\n\t\t\tgetSimpleAverage(grades) {\n\t\t\t\tconst allGrades = {\n\t\t\t\t\tgrades: 0,\n\t\t\t\t\tcount: 0\n\t\t\t\t};\n\n\t\t\t\tfor (let i = 0; i < grades.length; i++) {\n\t\t\t\t\tif(grades[i].info.significant === false && grades[i].info.significantZero === false) continue;\n\n\t\t\t\t\tconst val = parseFloat(grades[i].grade.value);\n\n\t\t\t\t\tconst out_of = parseInt(grades[i].grade.out_of);\n\n\t\t\t\t\tconst out20 = (val / out_of) * 20;\n\n\t\t\t\t\tallGrades.grades += out20 * grades[i].grade.coefficient;\n\t\t\t\t\tallGrades.count += grades[i].grade.coefficient;\n\t\t\t\t}\n\n\t\t\t\treturn allGrades.grades / allGrades.count;\n\t\t\t},\n\t\t\tgetAverageInfluence() {\n\t\t\t\t// get current average\n\t\t\t\tconst currentAverage = this.getAverage(this.grades, false);\n\n\t\t\t\t// get average without current mark\n\t\t\t\tconst newGrades = this.grades.filter((grade) => {\n\t\t\t\t\treturn grade.id !== this.currentGrade.id;\n\t\t\t\t});\n\n\t\t\t\tconst newAverage = this.getAverage(newGrades, false);\n\n\t\t\t\t// get difference\n\t\t\t\tconst difference = currentAverage - newAverage;\n\n\t\t\t\tthis.diffAvg = difference;\n\t\t\t},\n\t\t\tgetAverageClassInfluence() {\n\t\t\t\t// get current average\n\t\t\t\tconst currentAverage = this.getAverage(this.grades, true);\n\n\t\t\t\t// get average without current mark\n\t\t\t\tconst newGrades = this.grades.filter((grade) => {\n\t\t\t\t\treturn grade.id !== this.currentGrade.id;\n\t\t\t\t});\n\n\t\t\t\tconst newAverage = this.getAverage(newGrades, true);\n\n\t\t\t\t// get difference\n\t\t\t\tconst difference = currentAverage - newAverage;\n\n\t\t\t\tthis.diffClassAvg = difference;\n\t\t\t},\n\t\t\tgetAverageSubjectInfluence() {\n\t\t\t\tconst subjectGrades = this.grades.filter((grade) => {\n\t\t\t\t\treturn grade.info.subject === this.currentGrade.info.subject;\n\t\t\t\t});\n\n\t\t\t\t// get current average\n\t\t\t\tconst currentAverage = this.getSimpleAverage(subjectGrades, false);\n\n\t\t\t\t// get average without current mark\n\t\t\t\tconst newGrades = subjectGrades.filter((grade) => {\n\t\t\t\t\treturn grade.id !== this.currentGrade.id;\n\t\t\t\t});\n\n\t\t\t\tconst newAverage = this.getSimpleAverage(newGrades, false);\n\n\t\t\t\t// get difference\n\t\t\t\tconst difference = currentAverage - newAverage;\n\n\t\t\t\tthis.diffSubjectAvg = difference;\n\t\t\t}\n\t\t},\n\t\tmounted() {\n\t\t\tthis.findGrade(this.markID);\n\n\t\t\treturn false;\n\t\t}\n\t});\n</script>\n\n<template>\n\t\t<IonHeader class=\"AppHeader\" translucent>\n\t\t\t<IonToolbar>\n\n\t\t\t\t<ion-buttons slot=\"start\">\n\t\t\t\t\t<IonBackButton class=\"only-ios\" :text=\"backTitle\" @click=\"pop\"></IonBackButton>\n\t\t\t\t\t<IonBackButton class=\"only-md\" @click=\"pop\"></IonBackButton>\n\t\t\t\t</ion-buttons>\n\n\t\t\t\t<ion-title v-if=\"currentGrade\">{{ currentGrade.info.description }}</ion-title>\n\t\t\t\t<ion-title v-else><ion-skeleton-text style=\"width: 200px;\"></ion-skeleton-text></ion-title>\n\t\t\t</IonToolbar>\n\t\t</IonHeader>\n\n\t\t<ion-content :fullscreen=\"true\">\n\t\t\t<div v-if=\"currentGrade\">\n\t\t\t\t<IonList inset>\n\t\t\t\t\t<IonItem class=\"avgs\">\n\t\t\t\t\t\t<IonLabel>\n\t\t\t\t\t\t\t<p>Note</p>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<h1 v-if=\"currentGrade.info.significant\">{{ currentGrade.grade.value }}<small>/{{ currentGrade.grade.out_of }}</small></h1>\n\t\t\t\t\t\t\t<h1 v-else>{{ currentGrade.info.significantReason }}<small>/{{ currentGrade.grade.out_of }}</small></h1>\n\t\t\t\t\t\t</IonLabel>\n\n\t\t\t\t\t\t<IonLabel>\n\t\t\t\t\t\t\t<p>Coef.</p>\n\t\t\t\t\t\t\t<h2>{{ currentGrade.grade.coefficient }}</h2>\n\t\t\t\t\t\t</IonLabel>\n\n\t\t\t\t\t\t<IonLabel v-if=\"currentGrade.info.optional || currentGrade.info.bonus\">\n\t\t\t\t\t\t\t<ion-chip color=\"success\" v-if=\"currentGrade.info.bonus\">Bonus</ion-chip>\n\t\t\t\t\t\t\t<ion-chip color=\"warning\" v-if=\"currentGrade.info.optional\">Optionnel</ion-chip>\n\t\t\t\t\t\t</IonLabel>\n\t\t\t\t\t</IonItem>\n\t\t\t\t</IonList>\n\n\t\t\t\t<IonList inset>\n\t\t\t\t\t<IonItem class=\"avgs\" v-if=\"!isNaN(currentGrade.grade.min)\">\n\t\t\t\t\t\t<IonLabel>\n\t\t\t\t\t\t\t<p>Note -</p>\n\t\t\t\t\t\t\t<h2>{{ parseFloat(currentGrade.grade.min).toFixed(2) }}<small>/{{ currentGrade.grade.out_of }}</small></h2>\n\t\t\t\t\t\t</IonLabel>\n\t\t\t\t\t\t<IonLabel>\n\t\t\t\t\t\t\t<p>Classe</p>\n\t\t\t\t\t\t\t<h2>{{ parseFloat(currentGrade.grade.average).toFixed(2) }}<small>/{{ currentGrade.grade.out_of }}</small></h2>\n\t\t\t\t\t\t</IonLabel>\n\t\t\t\t\t\t<IonLabel>\n\t\t\t\t\t\t\t<p>Note +</p>\n\t\t\t\t\t\t\t<h2>{{ parseFloat(currentGrade.grade.max).toFixed(2) }}<small>/{{ currentGrade.grade.out_of }}</small></h2>\n\t\t\t\t\t\t</IonLabel>\n\t\t\t\t\t</IonItem>\n\t\t\t\t\t<IonItem class=\"avgs\" v-if=\"isNaN(currentGrade.grade.min)\">\n\t\t\t\t\t\t<h2><small>Les moyennes ne sont pas disponibles pour cette note</small></h2>\n\t\t\t\t\t</IonItem>\n\t\t\t\t</IonList>\n\n\t\t\t\t<IonList inset>\n\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t<IonLabel><p>Matière</p></IonLabel>\n\t\t\t\t\t\t<IonLabel slot=\"end\">{{ currentGrade.info.subject }}</IonLabel>\n\t\t\t\t\t</IonItem>\n\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t<IonLabel><p>Évaluation</p></IonLabel>\n\t\t\t\t\t\t<IonLabel slot=\"end\">{{ currentGrade.info.description }}</IonLabel>\n\t\t\t\t\t</IonItem>\n\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t<IonLabel><p>Rendu le</p></IonLabel>\n\t\t\t\t\t\t<IonLabel slot=\"end\">{{ new Date(currentGrade.info.date).toLocaleString('fr-FR', {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'}) }}</IonLabel>\n\t\t\t\t\t</IonItem>\n\t\t\t\t</IonList>\n\n\t\t\t\t<IonList inset>\n\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t<IonLabel><p>Influence sur la moyenne</p></IonLabel>\n\n\t\t\t\t\t\t<IonLabel v-if=\"diffAvg > 0 && !isNaN(currentGrade.grade.min)\" class=\"posMoyAdd\" slot=\"end\"><h2>+{{ diffAvg.toFixed(2) }} pts</h2></IonLabel>\n\t\t\t\t\t\t<IonLabel v-else class=\"negMoyAdd\" slot=\"end\"><h2>{{ isNaN(currentGrade.grade.min) ? \"Moyenne indisponible\" : diffAvg.toFixed(2) + \" pts\" }} </h2></IonLabel>\n\t\t\t\t\t</IonItem>\n\t\t\t\t\t<IonItem v-if=\"!isNaN(diffSubjectAvg)\">\n\t\t\t\t\t\t<IonLabel><p>Influence sur la matière</p></IonLabel>\n\t\t\t\t\t\t<IonLabel slot=\"end\"><span v-if=\"diffSubjectAvg > 0\">+</span>{{ isNaN(currentGrade.grade.min) ? \"Moyenne indisponible\" : diffSubjectAvg.toFixed(2) + \" pts\" }}</IonLabel>\n\t\t\t\t\t</IonItem>\n\t\t\t\t</IonList>\n\n\t\t\t\t<IonList inset>\n\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t<IonLabel><p>Influence sur la classe</p></IonLabel>\n\t\t\t\t\t\t<IonLabel slot=\"end\"><span v-if=\"diffClassAvg > 0\">+</span>{{ isNaN(currentGrade.grade.min) ? \"Moyenne indisponible\" : diffClassAvg.toFixed(2) + \" pts\" }}</IonLabel>\n\t\t\t\t\t</IonItem>\n\t\t\t\t</IonList>\n\t\t\t</div>\n\t\t</ion-content>\n</template>\n\n<style scoped>\n\th1, h2, h3 {\n\t\tfont-weight: 600 !important;\n\t}\n\n\th1 small {\n\t\tfont-weight: 400 !important;\n\t}\n\n\t.avgs::part(native) {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\ttext-align: center;\n\t}\n\n\t.posMoyAdd {\n\t\tcolor: var(--ion-color-success);\n\t}\n\n\t.negMoyAdd {\n\t\tcolor: var(--ion-color-danger);\n\t}\n</style>","import { render } from \"./MarkView.vue?vue&type=template&id=27228f26&scoped=true\"\nimport script from \"./MarkView.vue?vue&type=script&lang=js\"\nexport * from \"./MarkView.vue?vue&type=script&lang=js\"\n\nimport \"./MarkView.vue?vue&type=style&index=0&id=27228f26&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/vincelinise/Documents/GitHub/Papillon/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-27228f26\"]])\n\nexport default __exports__"],"names":["Share","web","then","m","ShareWeb","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_nav","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","onIonNavDidChange","navDidChange","onIonNavWillChange","navWillChange","root","component","ref","_","id","class","_createElementVNode","_hoisted_21","_hoisted_38","_hoisted_46","_hoisted_47","_hoisted_48","slot","_component_IonHeader","translucent","_component_IonToolbar","_component_ion_buttons","_component_ion_menu_button","color","_component_ion_title","_hoisted_1","display","_createElementBlock","_hoisted_2","_hoisted_3","_component_ion_select","onIonChange","$event","changeDisplay","interface","placeholder","value","_component_ion_select_option","_Transition","name","isLoading","_component_ion_spinner","key","md","periods","length","_component_ion_segment","current_period","segChange","_Fragment","_renderList","period","i","_component_ion_segment_button","_component_ion_label","_component_ion_content","fullscreen","_component_ion_header","collapse","_component_ion_toolbar","size","_component_ion_refresher","onIonRefresh","handleRefresh","_component_ion_refresher_content","_hoisted_4","_TransitionGroup","tag","loginService","_component_ion_item","_hoisted_5","grades","subject","index","_component_ion_card","style","_normalizeStyle","onClick","openAverageModal","grouped","_hoisted_7","significant","_hoisted_8","average","toFixed","_hoisted_9","_hoisted_10","significantReason","_hoisted_11","_hoisted_12","marks","mark","_component_IonNavLink","MarkView","componentProps","markID","_hoisted_13","_hoisted_14","_toDisplayString","info","description","_hoisted_15","grade","coefficient","updated_value","_hoisted_16","out_of","_hoisted_17","updated_out_of","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_22","significantAverage","isNaN","min","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","max","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_39","_component_ion_list","lines","button","detail","_component_ion_text","getClosestGradeEmoji","Date","date","toLocaleString","weekday","year","month","day","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_49","inset","GradesInsightsView","_component_IonItem","_hoisted_50","_component_IonLabel","_component_ion_chip","_hoisted_51","averages","_component_IonList","_component_IonListHeader","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","classAverages","_hoisted_58","args","displayBiasedMsg","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","calcAverage","_component_IonModal","breakpoints","handle","canDismiss","selectedMark","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","class_average","_hoisted_69","_hoisted_70","_hoisted_71","min_average","_hoisted_72","_hoisted_73","_hoisted_74","max_average","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_component_ion_button","fill","setExcludedJoinSubject","_hoisted_79","excluded","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","_component_IonBackButton","text","backTitle","pop","_component_Line","data","chartData","options","chartOptions","_hoisted_6","_component_IonRange","changeScale","Math","round","this","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","_rgb","_valid","valid","obj","mix","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","target","create","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","border","dash","dashOffset","width","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","element","ownerDocument","defaultView","getComputedStyle","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","callbacks","numSteps","initial","currentStep","_refresh","_update","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","LineController","_index_","_value_","super","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","getBasePixel","lastPoint","updateControlPoints","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","startAngle","endAngle","getProps","getNearestCartesianItems","distanceMetric","minDistance","center","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","horizontal","isHorizontal","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","_length","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","setStyle","lineCap","lineJoin","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","minY","maxY","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverBorderWidth","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","borderSkipped","parseBorderRadius","enableBorderRadius","borderRadius","maxR","enableBorder","boundingRects","outer","inner","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","inflateAmount","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","legendItem","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","centerX","centerY","yBoxTop","xBoxLeft","textDirection","fontColor","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","_args","legend","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","week","quarter","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","CommonProps","required","datasetIdKey","updateMode","Props","compatProps","internals","attrs","toRawIfProxy","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","setup","param","expose","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","createTypedChart","registerables","reforwardRef","Line","ChartJS","defineComponent","components","IonHeader","IonToolbar","IonButtons","IonBackButton","IonTitle","IonContent","IonList","IonItem","IonLabel","IonRange","currentRoute","$router","primaryColor","pointRadius","pointHoverRadius","pointHitRadius","methods","getWeekNumber","setHours","setDate","getDate","getDay","yearStart","getFullYear","weekNo","getAverage","classAvg","allGrades","significantZero","out20","getAverageEvolution","indexes","lastAverage","log","gradeDate","getTime","dayStr","toLocaleDateString","$refs","mounted","GetGrades","__exports__","changePeriod","localStorage","changePronotePeriod","changeEDPeriod","API","app","token","getItem","myHeaders","Headers","append","urlencoded","URLSearchParams","requestOptions","headers","redirect","fetch","response","json","IonMenuButton","IonPage","IonChip","IonCard","IonModal","IonListHeader","IonSegment","IonSegmentButton","IonSelect","IonText","IonNavLink","IonSpinner","gradesDisplay","isAndroid","Capacitor","fullGrades","base_period","segChangeTimeout","selectedGrade","selectedGradeSet","out_of_20","getPeriods","allPeriods","actualPeriod","actual","newSegment","$el","newPeriod","setItem","ChangePeriod","getGradesRefresh","catch","subjectName","gradeEmojiList","closest","grpExcluded","averageModal","present","editMarks","excludedGroupSubjects","trim","displayToast","dismiss","fromSegChange","getStringToAsciiArray","charCodeArr","code","charCodeAt","async","sharedGrade","firstName","student","urlElems","outOf20","bonus","optional","url","btoa","dialogTitle","$watch","searchGrades","search1","searchBarIos","search2","searchBarMd","search","openGradeModal","gradeModal","alert","alertController","header","message","buttons","calculate","IonNav","GradesView","changeTimeout","currentGrade","_component_ion_skeleton_text","diffAvg","diffSubjectAvg","diffClassAvg","IonSkeletonText","findGrade","getAverageInfluence","getAverageClassInfluence","getAverageSubjectInfluence","getSimpleAverage","currentAverage","newGrades","newAverage","difference","subjectGrades"],"sourceRoot":""}