{"version":3,"file":"js/357-legacy.6f4a153e.js","mappings":"kKAAIA,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMC,GAAS,OAAOA,aAAiBH,EAAIG,EAAQ,IAAIH,GAAE,SAAUI,GAAWA,EAAQD,EAAQ,GAAI,CAC3G,OAAO,IAAKH,IAAMA,EAAIK,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUJ,GAAS,IAAMK,EAAKP,EAAUQ,KAAKN,GAAS,CAAE,MAAOO,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAASR,GAAS,IAAMK,EAAKP,EAAU,SAASE,GAAS,CAAE,MAAOO,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOT,OAASD,EAAMU,EAAOT,OAAOW,KAAKP,EAAWI,EAAW,CAC7GH,GAAMP,EAAYA,EAAUc,MAAMjB,EAASC,GAAc,KAAKU,OAClE,GACJ,EAEO,MAAMO,UAA6B,KACtCC,cACIC,MAAM,CACFC,KAAM,oBACNC,UAAW,CAAC,QAEpB,CACAC,cAAcC,GACV,OAAOzB,EAAU0B,UAAM,OAAQ,GAAQ,YACnCA,KAAKC,cAAc,wBACvB,GACJ,E","sources":["webpack://papillon/./node_modules/capacitor-notification-badge/dist/esm/web.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { WebPlugin } from '@capacitor/core';\nexport class NotificationBadgeWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: 'NotificationBadge',\n            platforms: ['web'],\n        });\n    }\n    setBadgeCount(_options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.unimplemented('No web implementation');\n        });\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","NotificationBadgeWeb","constructor","super","name","platforms","setBadgeCount","_options","this","unimplemented"],"sourceRoot":""}